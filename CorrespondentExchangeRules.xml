<ПравилаОбмена>
	<ВерсияФормата РежимСовместимости="РежимСовместимостиСБСП20">2.01</ВерсияФормата>
	<Ид>ae5b05c0-f727-4b89-b7bf-c371771e9376    </Ид>
	<Наименование>ЕДС Реутов (обмен) --&gt; ЕДС Королев (обмен)</Наименование>
	<ДатаВремяСоздания>2016-12-21T23:31:07</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.3.83.1" СинонимКонфигурации="Управление предприятием ЖКХ, редакция 1.3">УправлениеПредприятиемЖКХ</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.0.0.37" СинонимКонфигурации="ЕДС (единая диспетчерская служба)">ЕДС</Приемник>
	<ПередВыгрузкойДанных>Параметры.Вставить("ИсточникВерсияПравил", "v20161221-232900");
Параметры.Вставить("ТерриториальноеПодразделениеРеутов", "Реутов");
Параметры.Вставить("ТерриториальноеПодразделениеКоролев", "Королев");</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>//+ СведенияПоЗадолженности
Параметры.Вставить("СведенияПоЗадолженностиПриемника_Период", Константы.ЕДСК_СведенияПоЗадолженностиПриемника.Получить() );
Параметры.Вставить("СведенияПоЗадолженностиИсточник_Таблица", Новый ТаблицаЗначений);
Выполнить(Алгоритмы.СведенияПоЗадолженности_ТаблицаНаВыгрузку);
//ПередатьОдинПараметрВПриемник("ФайлСодержитСведенияПоЗадолженности", Параметры.СведенияПоЗадолженностиИсточник_Таблица.Количество()&gt;0);
//- СведенияПоЗадолженности

//+ выгружаем по правилу УКЖКХ_РеестрДолжников
Если Параметры.СведенияПоЗадолженностиИсточник_Таблица.Количество()&gt;0 Тогда
	//Сч = 0;
	Для Каждого строкаТЗ Из Параметры.СведенияПоЗадолженностиИсточник_Таблица Цикл
		структураСведений = Новый Структура("Период,ИдентификаторЗаписи,ТекущаяСуммаЗадолженности,АдресПомещения");
		ЗаполнитьЗначенияСвойств(структураСведений, строкаТЗ);
		ВыгрузитьПоПравилу(, , структураСведений, , "УКЖКХ_РеестрДолжников");
		//ВыгрузитьПоПравилу(, , структураСведений, , "УКЖКХ_РеестрДолжников",,,,Истина);
		
		//Сч = Сч + 1;
		//Если Сч&gt;5 Тогда 
		//	Прервать; 
		//КонецЕсли;
		
	КонецЦикла;
КонецЕсли;
//- выгружаем по правилу УКЖКХ_РеестрДолжников</ПослеВыгрузкиДанных>
	<ПередЗагрузкойДанных>Параметры.Вставить("ТерриториальноеПодразделениеКоролев", Перечисления.УКНСИ_ТерриториальныеПодразделения.Королев);
Параметры.Вставить("ТерриториальноеПодразделениеРеутов", Перечисления.УКНСИ_ТерриториальныеПодразделения.Реутов);
Параметры.Вставить("СообщениеОбмена_ДатаПередаваемыхСведенийПоЗадолженностиИзРеутов", Неопределено);</ПередЗагрузкойДанных>
	<ПослеЗагрузкиДанных>//+ СведенияПоЗадолженности -&gt; очищаем в приемнике все записи по подразделению источника и старому периоду
Если Параметры.СообщениеОбмена_ДатаПередаваемыхСведенийПоЗадолженностиИзРеутов&lt;&gt;Неопределено Тогда
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТерриториальноеПодразделениеРеутов", Параметры.ТерриториальноеПодразделениеРеутов);
	Запрос.УстановитьПараметр("Период", Параметры.СообщениеОбмена_ДатаПередаваемыхСведенийПоЗадолженностиИзРеутов);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Период
		|ИЗ
		|	РегистрСведений.ЕДС_СведенияПоЗадолженности КАК Т
		|ГДЕ
		|	Т.ТерриториальноеПодразделение = &amp;ТерриториальноеПодразделениеРеутов
		|	И Т.Период &lt; &amp;Период
		|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		наборРС = РегистрыСведений.ЕДС_СведенияПоЗадолженности.СоздатьНаборЗаписей();
		наборРС.Отбор.Период.Установить(Выборка.Период);
		наборРС.Отбор.ТерриториальноеПодразделение.Установить(Параметры.ТерриториальноеПодразделениеРеутов); 
		наборРС.Записать();
	КонецЦикла;

	// обновляем константу для последующей передачи в Реутов
	Константы.ЕДС_СведенияПоЗадолженностиРеутов.Установить(Параметры.СообщениеОбмена_ДатаПередаваемыхСведенийПоЗадолженностиИзРеутов);
	
КонецЕсли;
//- СведенияПоЗадолженности -&gt; очищаем в приемнике все записи по подразделению источника и старому периоду</ПослеЗагрузкиДанных>
	<Параметры/>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило>
				<Код>УКЖКХ_АдресныйФонд</Код>
				<Наименование>Справочник: УКЖКХ Адресный фонд</Наименование>
				<Порядок>50</Порядок>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.УКЖКХ_АдресныйФонд</Источник>
				<Приемник>СправочникСсылка.УКЖКХ_АдресныйФонд</Приемник>
				<Свойства>
					<Свойство>
						<Код>16</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>1</Код>
						<Наименование>ДатаСоздания --&gt; ДатаСоздания</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="ДатаСоздания" Вид="Реквизит" Тип="Дата"/>
						<Приемник Имя="ДатаСоздания" Вид="Реквизит" Тип="Дата"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование>КЛАДР_УникальныйКлюч --&gt; КЛАДР_УникальныйКлюч</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="КЛАДР_УникальныйКлюч" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_УникальныйКлюч" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>КЛАДР_Поле1 --&gt; КЛАДР_Поле1</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="КЛАДР_Поле1" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле1" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>КЛАДР_Поле2 --&gt; КЛАДР_Поле2</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="КЛАДР_Поле2" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле2" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>КЛАДР_Поле3 --&gt; КЛАДР_Поле3</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="КЛАДР_Поле3" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле3" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование>КЛАДР_Поле4 --&gt; КЛАДР_Поле4</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="КЛАДР_Поле4" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле4" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>КЛАДР_Поле5 --&gt; КЛАДР_Поле5</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="КЛАДР_Поле5" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле5" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>КЛАДР_Поле6 --&gt; КЛАДР_Поле6</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="КЛАДР_Поле6" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле6" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>КЛАДР_Поле7 --&gt; КЛАДР_Поле7</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="КЛАДР_Поле7" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле7" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>КЛАДР_Поле8 --&gt; КЛАДР_Поле8</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="КЛАДР_Поле8" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле8" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование>КЛАДР_Поле9 --&gt; КЛАДР_Поле9</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="КЛАДР_Поле9" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Поле9" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>КЛАДР_Ключ --&gt; КЛАДР_Ключ</Наименование>
						<Порядок>650</Порядок>
						<Источник Имя="КЛАДР_Ключ" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КЛАДР_Ключ" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>УКЖКХ_АдресныйРеестр</Код>
				<Наименование>Справочник: УКЖКХ Адресный реестр</Наименование>
				<Порядок>100</Порядок>
				<ПослеЗагрузки>Объект.Наименование = Объект.Владелец.Наименование+", кв. "+Формат(Объект.НомерПомещения, "ЧГ=0;ЧН=0");</ПослеЗагрузки>
				<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
				<Источник>СправочникСсылка.УКЖКХ_АдресныйРеестр</Источник>
				<Приемник>СправочникСсылка.УКЖКХ_АдресныйРеестр</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Владелец --&gt; Владелец</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.УКЖКХ_АдресныйФонд"/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.УКЖКХ_АдресныйФонд"/>
						<КодПравилаКонвертации>УКЖКХ_АдресныйФонд                                </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true">
						<Код>4</Код>
						<Наименование>НомерПомещения --&gt; НомерПомещения</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="НомерПомещения" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="НомерПомещения" Вид="Реквизит" Тип="Число"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Регистры сведений</Код>
			<Наименование>Регистры сведений</Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>УКЖКХ_РеестрДолжников</Код>
				<Наименование>Регистр сведений: УКЖКХ Реестр должников</Наименование>
				<Порядок>100</Порядок>
				<ПередВыгрузкой>// выгружаем записи только с адресом Реутов
//Отказ = ( Лев(ВходящиеДанные.АдресПомещения.Владелец.КЛАДР_УникальныйКлюч, 11)&lt;&gt;Параметры.ТерриториальноеПодразделениеРеутовПоКладр );</ПередВыгрузкой>
				<ПослеЗагрузки>Объект.ИдентификаторЗагрузки = Новый УникальныйИдентификатор("10000000-0000-0000-0000-000000000000");
Объект.ТерриториальноеПодразделение = Параметры.ТерриториальноеПодразделениеРеутов;
//+ заполним параметр для последующей очистки набора записей в событии правил обмена "ПослеЗагрузки"
Если (Параметры.СообщениеОбмена_ДатаПередаваемыхСведенийПоЗадолженностиИзРеутов=Неопределено) Тогда
	Параметры.СообщениеОбмена_ДатаПередаваемыхСведенийПоЗадолженностиИзРеутов = Объект.Период;	
КонецЕсли;
//- заполним параметр для последующей очистки набора записей в событии правил обмена "ПослеЗагрузки"</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<Приемник>РегистрСведенийЗапись.ЕДС_СведенияПоЗадолженности</Приемник>
				<Свойства>
					<Свойство>
						<Код>5</Код>
						<Наименование>--&gt; Период</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Период" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>--&gt; ИдентификаторЗаписи</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ИдентификаторЗаписи" Вид="Измерение" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование>--&gt; ТекущаяСуммаЗадолженности</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ТекущаяСуммаЗадолженности" Вид="Ресурс" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>--&gt; АдресПомещения</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="АдресПомещения" Вид="Реквизит" Тип="СправочникСсылка.УКЖКХ_АдресныйРеестр"/>
						<КодПравилаКонвертации>УКЖКХ_АдресныйРеестр                              </КодПравилаКонвертации>
						<ПередВыгрузкой>ВыгрузитьОбъект = Истина;</ПередВыгрузкой>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Группа Отключить="false">
			<Код>Справочники</Код>
			<Наименование>Справочники</Наименование>
			<Порядок>50</Порядок>
			<Правило Отключить="false">
				<Код>УКЖКХ_АдресныйФонд</Код>
				<Наименование>УКЖКХ_АдресныйФонд                                </Наименование>
				<Порядок>50</Порядок>
				<КодПравилаКонвертации>УКЖКХ_АдресныйФонд                                </КодПравилаКонвертации>
				<СпособОтбораДанных>СтандартнаяВыборка</СпособОтбораДанных>
				<ОбъектВыборки>СправочникСсылка.УКЖКХ_АдресныйФонд</ОбъектВыборки>
				<ПередОбработкойПравила>Отказ = Истина;</ПередОбработкойПравила>
			</Правило>
		</Группа>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="СведенияПоЗадолженности_ТаблицаНаВыгрузку" ИспользуетсяПриЗагрузке="false">
			<Текст>//!!! при выгрузке не учитываем КЛАДР адресов - выгружаем все привязанные долги - на этапе загрузки не принимаем чужие адреса (которых нет в ИБ Королев)

// сформируем ТЗ на выгрузку сведений по задолженности
Запрос = Новый Запрос;
Запрос.УстановитьПараметр("НетАдресаПомещения", Справочники.УКЖКХ_АдресныйРеестр.ПустаяСсылка() );
Запрос.УстановитьПараметр("СведенияПоЗадолженностиПриемника_Период", Параметры.СведенияПоЗадолженностиПриемника_Период);
//Запрос.УстановитьПараметр("ТерриториальноеПодразделениеРеутовПоКладр", Параметры.ТерриториальноеПодразделениеРеутовПоКладр);
Запрос.Текст = 
	"
	|ВЫБРАТЬ 
	|	ВЫБОР КОГДА &amp;СведенияПоЗадолженностиПриемника_Период &lt; ISNULL(МАКСИМУМ(Т.Период), ДАТАВРЕМЯ(1,1,1)) ТОГДА МАКСИМУМ(Т.Период) ИНАЧЕ NULL КОНЕЦ КАК Период
	//|	, ISNULL(МАКСИМУМ(Т.Период), ДАТАВРЕМЯ(1,1,1)) Как Период
	|ПОМЕСТИТЬ ВТ_Период
	|ИЗ
	|	РегистрСведений.УКЖКХ_РеестрДолжников КАК Т
	|;
	|ВЫБРАТЬ 
	//|первые 5
	|	Т.Период
	//|	, Т.ОбслуживающаяОрганизация
	|	, 0 КАК ИдентификаторЗаписи
	|	, Т.СуммаДолгаСУчетомОпл КАК ТекущаяСуммаЗадолженности
	|	, Т.Адрес КАК АдресПомещения
	|	, ВЫБОР КОГДА Т.Адрес=&amp;НетАдресаПомещения ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ЗаписьБезАдресаПомещения
	|ИЗ
	|	РегистрСведений.УКЖКХ_РеестрДолжников КАК Т
	|	JOIN ВТ_Период ПО Т.Период=ВТ_Период.Период
	//|ГДЕ
	//|	ПОДСТРОКА(Т.Адрес.Владелец.КЛАДР_УникальныйКлюч, 1, 11)=&amp;ТерриториальноеПодразделениеРеутовПоКладр
	//|упорядочить по Т.НомерСтрокиФайла
	|";
	
Параметры.СведенияПоЗадолженностиИсточник_Таблица = Запрос.Выполнить().Выгрузить();
КоличествоЗаписейБезАдресаПомещения = Параметры.СведенияПоЗадолженностиИсточник_Таблица.Итог("ЗаписьБезАдресаПомещения");
Если КоличествоЗаписейБезАдресаПомещения&gt;0 Тогда
	Параметры.СведенияПоЗадолженностиИсточник_Таблица.Очистить();
КонецЕсли;

// эмулируем ИдентификаторЗаписи (сквозной на всю коллекцию)
Сч = 1;
Для Каждого строкаТЗ Из Параметры.СведенияПоЗадолженностиИсточник_Таблица Цикл
	строкаТЗ.ИдентификаторЗаписи = Сч;
	Сч = Сч + 1;
КонецЦикла;

//Сообщить("Количество="+Параметры.СведенияПоЗадолженностиИсточник_Таблица.Количество());</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>